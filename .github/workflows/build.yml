# SPDX-License-Identifier: GPL-3.0-only
name: Build

env:
  KERNEL_GITHUB_REPOSITORY: "okias/linux"
  KERNEL_NAME: qcom-apq8064
  KBUILD_DEFCONFIG: qcom_apq8064_defconfig
  CROSS_COMPILE: arm-linux-gnueabihf- # build for armv7
  ARCH_SPEC_PKGS: crossbuild-essential-armhf
  ARCH: arm # build for armv7
  SCCACHE_CACHE_SIZE: 2G
  SCCACHE_DIR: /home/runner/.cache/sccache

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        kernel: [v5.10,mainline,next]
        cc: [gcc]
    runs-on: ubuntu-latest
    env:
      TUXMAKE_EXTRA_OPTS: >
        --kconfig-add CONFIG_DEBUG_FS=y
        --kconfig-add CONFIG_GENERIC_IRQ_DEBUGFS=y
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.KERNEL_GITHUB_REPOSITORY }}
          ref: ${{ env.KERNEL_NAME }}-${{ matrix.kernel }}
          path: linux
      - name: Install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.15
        run: |
          export SCCACHE_FILE=sccache-v$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/v$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Enable cache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ${{ env.SCCACHE_DIR }}
          key: ${{ env.KERNEL_NAME }}-${{ matrix.kernel }}-${{ matrix.cc }}
      - name: Start sccache server
        run: sccache --start-server
      - name: Install dependencies
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 ${{ env.ARCH_SPEC_PKGS }} git build-essential binutils-multiarch device-tree-compiler fakeroot libncurses5-dev libssl-dev bison flex libelf-dev dwarves python3-pip socat clang-12 > /dev/null
          pip3 install -U --user tuxmake
      - name: Build
        run: |
          tuxmake --directory linux -w sccache --target-arch=arm -k $KBUILD_DEFCONFIG $TUXMAKE_EXTRA_OPTS
          mv /home/runner/.cache/tuxmake/builds/1/vmlinux.xz ./debug-vmlinux.xz
          tar -cf linux-${{ env.KERNEL_NAME }}-${{ matrix.kernel}}-${{ matrix.cc }}.tar -C /home/runner/.cache/tuxmake/builds/1 .
      - name: Print sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.KERNEL_NAME }}-${{ matrix.kernel }}-${{ matrix.cc }}"
          prerelease: true
          title: "Build of ${{ env.KERNEL_NAME }} ${{ matrix.kernel }}, compiled with ${{ matrix.cc }}"
          files: |
            *.tar
            *.xz
  dtbs:
    strategy:
      fail-fast: false
      matrix:
        kernel: [next]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.KERNEL_GITHUB_REPOSITORY }}
          ref: ${{ env.KERNEL_NAME }}-${{ matrix.kernel }}
          path: linux
      - name: Build
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 ${{ env.ARCH_SPEC_PKGS }} libyaml-dev git build-essential binutils-multiarch device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user git+https://github.com/devicetree-org/dt-schema.git@master
          cd linux
          make $KBUILD_DEFCONFIG
          status=0
          make -j3 dtbs || status=1
          make -j3 dtbs_check || status=1
          exit $status
  dt_bindings_check:
    strategy:
      fail-fast: false
      matrix:
        kernel: [next]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.KERNEL_GITHUB_REPOSITORY }}
          ref: ${{ env.KERNEL_NAME }}-${{ matrix.kernel }}
          path: linux
      - name: Build
        run: |
          sudo apt-get -qq update > /dev/null
          sudo apt-get -qq install -y --no-install-recommends -o=Dpkg::Use-Pty=0 ${{ env.ARCH_SPEC_PKGS }} libyaml-dev git build-essential binutils-multiarch device-tree-compiler fakeroot libncurses5-dev libssl-dev ccache bison flex libelf-dev dwarves python3-pip socat > /dev/null
          pip3 install -U --user git+https://github.com/devicetree-org/dt-schema.git@master
          cd linux
          make -j3 dt_binding_check
